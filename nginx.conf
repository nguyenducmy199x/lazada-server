server {
    if ($host = mylazada.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name mylazada.xyz www.mylazada.xyz;
    return 301 https://$host$request_uri;  # Redirect HTTP -> HTTPS

}
server {
    listen 443 ssl;
    server_name mylazada.xyz www.mylazada.xyz;
    # sudo certbot --nginx
    # tạo và insert tự động vào nginx default conf bên dưới :
    ssl_certificate /etc/letsencrypt/live/mylazada.xyz-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mylazada.xyz-0001/privkey.pem; # managed by Certbot


    root /usr/share/nginx/html/browser;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }


    location /api/ {

        proxy_pass http://127.0.0.1:8081/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        # Thêm timeout nếu cần thiết
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;

    }

    location /swagger-ui/ {
        proxy_pass http://127.0.0.1:8081/swagger-ui/;  # Đảm bảo Swagger UI chạy trên ứng dụng Spring Boot
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        # Thêm timeout nếu cần thiết
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }
    location /v3/api-docs/ {
        proxy_pass http://127.0.0.1:8081/v3/api-docs/;  # Proxy Swagger JSON Docs
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}